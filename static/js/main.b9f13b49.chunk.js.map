{"version":3,"sources":["Grid/Grid.module.scss","Sidebar/Tabs/TabGroup.module.scss","Sidebar/Structures/StructureList.module.scss","Sidebar/Tabs/TabItem.module.scss","App.module.scss","Sidebar/Sidebar.module.scss","Sidebar/Controls/Controls.tsx","Sidebar/Structures/StructureList.tsx","Sidebar/Tabs/TabItem.tsx","Sidebar/Tabs/TabGroup.tsx","Sidebar/Structures/StructureData.ts","Sidebar/Sidebar.tsx","algorithms/Cgol.ts","Grid/Grid.tsx","globals.ts","App.tsx","index.tsx"],"names":["module","exports","classNames","require","Controls","controlFunctions","cn","className","onClick","safeCall","current","advance","undo","clearHistory","reset","randomise","type","onChange","e","doWrap","target","checked","func","undefined","StructureList","structures","styles","structure_list","map","structure","i","loadStructure","cells","name","TabItem","label","selected","onTabClick","tab_item","TabGroup","tabs","useState","currentTabIdx","setCurrentTabIdx","tab_group","tab_item_row","tab","tabIdx","content","gridToCells","grid","o","row","length","col","push","Structures","Sidebar","controls","isOob","getNext","neighbours","neighbourCountGrid","m","newRow","Math","floor","newCol","getNeighbourCountGrid","r","Grid","getWindowDimensions","gridDimensions","getInitialGrid","setGrid","currentDrag","setCurrentDrag","currentStructure","setCurrentStructure","penPosition","setPenPosition","gridHistory","useRef","addHistory","pop","updateCells","currentGrid","newGrid","copyGrid","forEach","cell","updateGrid","advanceGrid","endDrag","prevState","console","log","getRandomGrid","handleMouseDown","rowIdx","colIdx","newDrag","c","placeStructure","handleKeyDown","key","preventDefault","useEffect","document","addEventListener","cellValue","isHoveredWithStructure","some","cellCN","active","dead","hover","onMouseDown","onMouseUp","onMouseMove","buttons","handleMouseMove","window","width","innerWidth","height","innerHeight","GRID_MARGIN","dimensions","random","g","a","slice","App","ReactDOM","render","getElementById"],"mappings":"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AAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACvE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,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","file":"static/js/main.b9f13b49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__3zS0Y\",\"row\":\"Grid_row__2U9u8\",\"cell\":\"Grid_cell__wmPYA\",\"dead\":\"Grid_dead__28k7c\",\"active\":\"Grid_active__1k5zB\",\"hover\":\"Grid_hover__F_qrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab_group\":\"TabGroup_tab_group__ZUKwU\",\"tab_item_row\":\"TabGroup_tab_item_row__1H0kf\",\"content\":\"TabGroup_content__nnRsf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"structure_list\":\"StructureList_structure_list__113Sv\",\"structure\":\"StructureList_structure__1uui2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab_item\":\"TabItem_tab_item__3vyYE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__-bWai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Sidebar_controls__3VYRj\"};","import React from \"react\";\r\nimport { IControlFunctions } from \"../../globals\";\r\nimport styles from './Controls.module.scss';\r\nvar classNames = require('classnames');\r\n\r\nexport interface ControlsProps {\r\n    controlFunctions: React.MutableRefObject<IControlFunctions>;\r\n}\r\n\r\nexport const Controls: React.FC<ControlsProps> = ({ controlFunctions }) => {\r\n    let cn = classNames();\r\n\r\n    return <div className={cn}>\r\n        <button onClick={() => safeCall(controlFunctions.current.advance)}>Advance</button>\r\n        \r\n        <button onClick={() => safeCall(controlFunctions.current.undo)}>Undo</button>\r\n        \r\n        <button onClick={() => safeCall(controlFunctions.current.clearHistory)}>Clear History</button>\r\n        \r\n        <button onClick={() => safeCall(controlFunctions.current.reset)}>Reset</button>\r\n\r\n        <button onClick={() => safeCall(controlFunctions.current.randomise)}>Randomise</button>\r\n\r\n        <input type=\"checkbox\" onChange={(e) => {controlFunctions.current.doWrap = e.target.checked}}/>\r\n    </div>\r\n}\r\n\r\nfunction safeCall(func: (() => void) | undefined): void {\r\n    if(func === undefined) return;\r\n    func();\r\n}","import React from \"react\";\r\nimport { IControlFunctions } from \"../../globals\";\r\nimport { IStructure } from \"./StructureData\";\r\nimport styles from './StructureList.module.scss';\r\nvar classNames = require('classnames');\r\n\r\nexport interface StructureListProps {\r\n    structures: IStructure[];\r\n    controlFunctions: React.MutableRefObject<IControlFunctions>;\r\n}\r\n\r\nexport const StructureList: React.FC<StructureListProps> = ({ structures, controlFunctions }) => {\r\n    let cn = classNames(styles.structure_list);\r\n    \r\n    return <div className={cn}>\r\n        {structures.map((structure, i) => (\r\n            <div className={styles.structure} key={i} onClick={() => controlFunctions.current.loadStructure ? controlFunctions.current.loadStructure(structure.cells):null}>\r\n                {structure.name}\r\n            </div>\r\n        ))}\r\n    </div>\r\n}","import React from \"react\";\r\nimport styles from './TabItem.module.scss';\r\nimport { TabItemProps } from \"./Tabs\";\r\nvar classNames = require('classnames');\r\n\r\nexport const TabItem: React.FC<TabItemProps> = ({ label, selected, onTabClick }) => {\r\n    let cn = classNames(styles.tab_item, { [styles.selected]: selected });\r\n    \r\n    return <div className={cn} onClick={onTabClick ? () => onTabClick() : undefined}>\r\n        {label}\r\n    </div>\r\n}","import React, { useState } from \"react\";\r\nimport styles from './TabGroup.module.scss';\r\nimport { TabItem } from \"./TabItem\";\r\nimport { TabGroupProps } from \"./Tabs\";\r\nvar classNames = require('classnames');\r\n\r\nexport const TabGroup: React.FC<TabGroupProps> = ({ tabs }) => {\r\n    const [ currentTabIdx, setCurrentTabIdx ] = useState(0);\r\n\r\n    let cn = classNames();\r\n    \r\n    return <div className={styles.tab_group}>\r\n        <div className={styles.tab_item_row}>\r\n            {tabs.map((tab, tabIdx) => (\r\n                <TabItem key={tabIdx}\r\n                    label={tab.label}\r\n                    selected={currentTabIdx === tabIdx}\r\n                    onTabClick={() => setCurrentTabIdx(tabIdx)}\r\n                />\r\n            ))}\r\n        </div>\r\n        <div className={styles.content}>\r\n            {tabs[currentTabIdx].content}\r\n        </div>\r\n    </div>\r\n}","export interface ICoord {\r\n    row: number;\r\n    col: number;\r\n}\r\n\r\nexport interface IStructure {\r\n    cells: ICoord[],\r\n    name: string\r\n}\r\n\r\nconst gridToCells = (grid: number[][]): ICoord[] => {\r\n    const o: ICoord[] = [];\r\n\r\n    for(let row = 0; row < grid.length; row++) {\r\n        for(let col = 0; col < grid[row].length; col++) {\r\n            if(grid[row][col] === 1) o.push({row, col});\r\n        }\r\n    }\r\n\r\n    return o;\r\n}\r\n\r\nconst Structures: IStructure[] = [\r\n    {\r\n        name: \"Glider\",\r\n        cells: gridToCells([\r\n            [0,0,1],\r\n            [1,0,1],\r\n            [0,1,1],\r\n        ])\r\n    },\r\n    {\r\n        name: \"Gosper Glider Gun\",\r\n        cells: gridToCells([\r\n            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1],\r\n            [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1],\r\n            [1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            [1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n        ])\r\n    }\r\n];\r\n\r\nexport default Structures;","import React from \"react\";\r\nimport { IControlFunctions } from \"../globals\";\r\nimport { Controls } from \"./Controls/Controls\";\r\nimport styles from './Sidebar.module.scss';\r\nimport { StructureList } from \"./Structures/StructureList\";\r\nimport { TabGroup } from \"./Tabs/TabGroup\";\r\nimport { ITabValues } from \"./Tabs/Tabs\";\r\nimport Structures from \"./Structures/StructureData\";\r\nvar classNames = require('classnames');\r\n\r\nexport interface SidebarProps { \r\n    controlFunctions: React.MutableRefObject<IControlFunctions>;\r\n}\r\n\r\nexport const Sidebar: React.FC<SidebarProps> = ({ controlFunctions }) => {\r\n    let cn = classNames(\r\n        styles.controls\r\n    );\r\n\r\n    const tabs: ITabValues = [\r\n        {\r\n            label: \"Controls\",\r\n            content: <Controls controlFunctions={controlFunctions} />\r\n        },\r\n        {\r\n            label: \"Structures\",\r\n            content: <StructureList structures={Structures} controlFunctions={controlFunctions}/>\r\n        }\r\n    ]\r\n\r\n    return <div className={cn}>\r\n        <TabGroup tabs={tabs} />\r\n    </div>\r\n}","import { CellType } from \"../globals\";\r\n\r\nconst isOob = (grid: CellType[][], row: number, col: number): boolean => {\r\n    return row < 0 || col < 0 || row >= grid.length || col >= grid[row].length;\r\n}\r\n\r\nconst getNeighbourCountGrid = (grid: CellType[][], doWrap: boolean): number[][] => {\r\n    const o: number[][] = [];\r\n    for(let row = 0; row < grid.length; row++) {\r\n        o.push([]);\r\n        for(let col = 0; col < grid[row].length; col++) {\r\n            o[row].push(0);\r\n        }\r\n    }\r\n\r\n    for(let row = 0; row < grid.length; row++) {\r\n        for(let col = 0; col < grid[row].length; col++) {\r\n            if(grid[row][col] === 'dead') continue;\r\n\r\n            /* \r\n                0 1 2\r\n                3 4 5\r\n                6 7 8\r\n                where 4 is the current cell.\r\n            */\r\n            for(let m = 0; m < 9; m++) {\r\n                let [newRow, newCol] = [row + Math.floor(m / 3)-1, col + m % 3-1];\r\n                \r\n                if(doWrap) { \r\n                    newRow = (newRow+grid.length) % grid.length;\r\n                    newCol = (newCol+grid[row].length) % grid[row].length;\r\n                }\r\n\r\n                if(m !== 4 && !isOob(grid, newRow, newCol)) {\r\n                    o[newRow][newCol]++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return o;\r\n}\r\n\r\nconst isAlive = (current: CellType, neighbours: number): boolean => {\r\n    return current === 'dead' ? (neighbours === 3) : (neighbours === 2 || neighbours === 3);\r\n}\r\n\r\nexport const getNext = (grid: CellType[][], doWrap: boolean): CellType[][] => {\r\n    const o: CellType[][] = [];\r\n    const neighbourCountGrid = getNeighbourCountGrid(grid, doWrap);\r\n    \r\n    for(let row = 0; row < grid.length; row++) {\r\n        o.push([]);\r\n        for(let col = 0; col < grid[row].length; col++) {\r\n            const r: CellType = isAlive(grid[row][col], neighbourCountGrid[row][col]) ? 'alive' : 'dead'; \r\n            o[row].push(r);\r\n        }\r\n    }\r\n\r\n    return o;\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { createExportAssignment } from \"typescript\";\r\nimport { getNext } from \"../algorithms/Cgol\";\r\nimport { CellType, CELL_HEIGHT, GridDimensions, GRID_MARGIN, ICell, IControlFunctions } from \"../globals\";\r\nimport { ICoord } from \"../Sidebar/Structures/StructureData\";\r\n\r\nimport styles from './Grid.module.scss';\r\nvar classNames = require('classnames');\r\n\r\nexport interface GridProps {\r\n    controlFunctions: React.MutableRefObject<IControlFunctions>;\r\n}\r\n\r\nexport const Grid: React.FC<GridProps> = ({ controlFunctions }) => {\r\n    const [ gridDimensions, setGridDimensions ] = useState<GridDimensions>(getWindowDimensions());\r\n    const [ grid, setGrid ] = useState<CellType[][]>(getInitialGrid(gridDimensions));\r\n    const [ currentDrag, setCurrentDrag ] = useState<CellType | null>(null);\r\n    const [ currentStructure, setCurrentStructure ] = useState<ICoord[] | null>(null);\r\n    const [ penPosition, setPenPosition ] = useState<ICoord | null>(null);\r\n    const gridHistory = useRef<CellType[][][]>([]);\r\n\r\n    const addHistory = (grid: CellType[][]): void => {\r\n        if(gridHistory.current.length >= 100) gridHistory.current.pop();\r\n        gridHistory.current.push(grid);\r\n        \r\n    }\r\n\r\n    const clearHistory = (): void => {\r\n        gridHistory.current = [];\r\n    }\r\n\r\n    // Re-write - decide on if we're doing per cell or per grid\r\n    const updateCells = (cells: ICell[]): void => {\r\n        if(cells.length === 0) return;\r\n        setGrid(currentGrid => {\r\n            const newGrid = copyGrid(currentGrid);\r\n            cells.forEach(cell => {\r\n                newGrid[cell.row][cell.col] = cell.type;\r\n            })\r\n            return newGrid;\r\n        });\r\n    }\r\n\r\n    const updateGrid = (newGrid: CellType[][]): void => {\r\n        addHistory(grid);\r\n        setGrid(newGrid);\r\n    }\r\n\r\n    const advanceGrid = (): void => {\r\n        setGrid(currentGrid => {\r\n            addHistory(currentGrid);\r\n            return getNext(currentGrid, controlFunctions.current.doWrap)\r\n        });\r\n    }\r\n\r\n    const undo = (): void => {\r\n        const prevState = gridHistory.current.pop();\r\n        console.log(prevState)\r\n        if(!prevState) return;\r\n        setGrid(prevState);\r\n    }\r\n\r\n    const randomiseGrid = (): void => {\r\n        updateGrid(getRandomGrid(gridDimensions));\r\n        // clearHistory();\r\n    }\r\n\r\n    const resetGrid = (): void => {\r\n        updateGrid(getInitialGrid(gridDimensions));\r\n        // clearHistory();\r\n    }\r\n\r\n    const endDrag = (): void => {\r\n        setCurrentDrag(null);\r\n    }\r\n\r\n    const loadStructure = (cells: ICoord[]): void => {\r\n        setCurrentStructure(cells);\r\n        endDrag();\r\n    }\r\n    \r\n    controlFunctions.current.advance = advanceGrid;\r\n    controlFunctions.current.undo = undo;\r\n    controlFunctions.current.clearHistory = clearHistory;\r\n    controlFunctions.current.randomise = randomiseGrid;\r\n    controlFunctions.current.reset = resetGrid;\r\n    controlFunctions.current.loadStructure = loadStructure;\r\n\r\n    const placeStructure = (rowIdx: number, colIdx: number) => {\r\n        \r\n        if(!currentStructure) return;\r\n        updateCells(currentStructure.map(c => ({row: c.row+rowIdx, col: c.col+colIdx, type: 'alive'})))\r\n        setCurrentStructure(null);\r\n    }\r\n\r\n    const handleMouseDown = (e: React.MouseEvent<HTMLDivElement>, rowIdx: number, colIdx: number): void => {\r\n        gridHistory.current.push(grid);\r\n        console.log(rowIdx);\r\n        if(currentStructure !== null) {\r\n            placeStructure(rowIdx, colIdx);\r\n            return;\r\n        }\r\n        \r\n        const newDrag = grid[rowIdx][colIdx] === 'alive' ? 'dead' : 'alive';\r\n        setCurrentDrag(newDrag);\r\n        updateCells([{\r\n            type: newDrag, \r\n            row: rowIdx, \r\n            col: colIdx\r\n        }])\r\n    }\r\n\r\n    const handleMouseUp = (e: React.MouseEvent<HTMLDivElement, MouseEvent>, rowIdx: number, colIdx: number): void => {\r\n        endDrag();\r\n    }\r\n\r\n    const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>, rowIdx: number, colIdx: number): void => {\r\n        if((penPosition===null || penPosition.row !== rowIdx || penPosition.col !== colIdx) && currentStructure !== null) setPenPosition({row: rowIdx, col:colIdx});\r\n\r\n        if(currentDrag === null || currentDrag === grid[rowIdx][colIdx]) return;\r\n        \r\n        // Fixes if you hold click and then leave the grid - checks to make sure there are buttons held down on return.\r\n        if(e.buttons === 0) {\r\n            endDrag();\r\n            return;\r\n        }\r\n        \r\n        updateCells([{\r\n            type: currentDrag, \r\n            row: rowIdx, \r\n            col: colIdx\r\n        }])\r\n    }\r\n\r\n    const handleKeyDown = (e: KeyboardEvent): void => {\r\n        if(e.key !== ' ') return;\r\n        e.preventDefault();\r\n        advanceGrid();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyDown);\r\n    }, []);\r\n\r\n    return <div className={styles.grid}>\r\n        {grid.map((row, rowIdx) => (\r\n            <div className={styles.row} key={rowIdx}>\r\n                {row.map((cellValue, colIdx) => {\r\n                    const isHoveredWithStructure = currentStructure !== null && penPosition !== null && currentStructure?.some(c => (c.row=== rowIdx-penPosition!.row && c.col===colIdx-penPosition!.col));\r\n                    const cellCN = classNames(styles.cell, {\r\n                        [styles.active]: cellValue === 'alive',\r\n                        [styles.dead]: cellValue === 'dead' && !isHoveredWithStructure,\r\n                        [styles.hover]: cellValue === 'dead' && isHoveredWithStructure\r\n                    })\r\n                    \r\n                    return <div \r\n                        className={cellCN} \r\n                        key={`${rowIdx} ${colIdx}`} \r\n                        onMouseDown={(e) => handleMouseDown(e, rowIdx, colIdx)}\r\n                        onMouseUp={(e) => handleMouseUp(e, rowIdx, colIdx)}\r\n                        onMouseMove={(e) => handleMouseMove(e, rowIdx, colIdx)}\r\n                    />\r\n                })}\r\n            </div>\r\n        ))}\r\n    </div>\r\n}\r\n\r\n// Get dimensions of the grid based on the window size\r\nconst getWindowDimensions = (): GridDimensions => {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width: Math.floor((width-GRID_MARGIN*2)/CELL_HEIGHT*0.6), \r\n        height: Math.floor((height-GRID_MARGIN*2)/CELL_HEIGHT)\r\n    };\r\n}\r\n\r\n// Return a default, dead grid.\r\nconst getInitialGrid = (dimensions: GridDimensions): CellType[][] => {\r\n    const o: CellType[][] = [];\r\n\r\n    for (let row = 0; row < dimensions.height; row++) {\r\n      o.push([]);\r\n      for (let col = 0; col < dimensions.width; col++) {\r\n        o[row].push('dead');\r\n      }\r\n    }\r\n    return o;\r\n}\r\n\r\nconst getRandomCell = (): CellType => Math.random() < 0.5 ? 'alive' : 'dead';\r\n\r\nconst getRandomGrid = (dimensions: GridDimensions): CellType[][] => {\r\n    const o: CellType[][] = [];\r\n\r\n    for (let row = 0; row < dimensions.height; row++) {\r\n      o.push([]);\r\n      for (let col = 0; col < dimensions.width; col++) {\r\n        o[row].push(getRandomCell());\r\n      }\r\n    }\r\n    return o;\r\n}\r\n\r\n// Deep copy\r\nconst copyGrid = (g: any[][]): any[][] => {\r\n    return g.map(a => a.slice());\r\n}","import { ICoord } from \"./Sidebar/Structures/StructureData\";\r\n\r\nexport const CELL_TYPES = ['dead', 'alive'] as const;\r\nexport type CellType = typeof CELL_TYPES[number];\r\nexport interface ICell {\r\n    type: CellType;\r\n    row: number;\r\n    col: number;\r\n}\r\n\r\nexport const CELL_HEIGHT = 22;\r\nexport const GRID_MARGIN = 20;\r\n\r\nexport type GridDimensions = {\r\n    width: Number;\r\n    height: Number;\r\n};\r\n\r\nexport interface IControlFunctions {\r\n  advance?: () => void;\r\n  undo?: () => void;\r\n  clearHistory?: () => void;\r\n  randomise?: () => void;\r\n  reset?: () => void;\r\n  loadStructure?: (cells: ICoord[]) => void;\r\n  doWrap: boolean;\r\n}","import React, { useRef } from 'react';\nimport styles from './App.module.scss';\nimport { Sidebar } from './Sidebar/Sidebar';\nimport { Grid } from './Grid/Grid';\nimport { IControlFunctions } from './globals';\n\n\nfunction App() {\n  const controlFunctions = useRef<IControlFunctions>({doWrap: false});\n  \n  return (\n    <div className={styles.App}>\n      <Grid controlFunctions={controlFunctions} />\n      <Sidebar controlFunctions={controlFunctions} />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}